package com.wsingnal.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.wsingnal.dto.PhoneRequestDto;
import com.wsingnal.dto.UserDto;
import com.wsingnal.dto.VerifyCodeDto;
import com.wsingnal.service.SmsService;
import com.wsingnal.service.UserService;

@RestController
public class WSignalController {

	@Autowired
	private UserService userService;

	@Autowired
	private SmsService smsService;

	@PostMapping("/api/signup")
	public ResponseEntity<String> signUp(@RequestBody UserDto UserDTO) {

		boolean success = userService.registerUser(UserDTO);
		if (success) {
			return ResponseEntity.ok("회원가입 성공!");
		} else {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("이미 사용 중인 이메일입니다.");
		}
	}

	 // 인증 코드 전송 API
    @PostMapping("/api/sendVerificationCode")
    public ResponseEntity<String> sendVerificationCode(@RequestBody PhoneRequestDto request) {
        System.out.println("requset"+ request.getPhone());
    	try {
        	smsService.sendVerificationCode(request);
            return ResponseEntity.ok("인증 코드가 전송되었습니다.");
        } catch (Exception e) {
            return ResponseEntity.status(500).body("인증 코드 전송에 실패했습니다.");
        }
    }

    // 인증 코드 확인 API
    @PostMapping("/api/verifyCode")
    public ResponseEntity<String> verifyCode(@RequestBody VerifyCodeDto request) {
        if (smsService.verifyCode(request)) {
            return ResponseEntity.ok("인증 성공");
        } else {
            return ResponseEntity.status(400).body("인증 코드가 일치하지 않습니다.");
        }
    }

}
